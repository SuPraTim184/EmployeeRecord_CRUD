@model EmployeeRecord.Models.EmployeeRecords

@{
    ViewData["Title"] = "Index";
}



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>


<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-sm-7">Manage Employee</div>
            <div class="col-sm-2"><button type="button" class="btn btn-danger btn-sm" data-toggle="modal" data-target="#Delete"><i class="fa-solid fa-user-slash"></i>&nbsp; Delete</button></div>
            <div class="col-sm-3"><button type="button" class="btn btn-success btn-sm" data-toggle="modal" data-target="#AddEdit"><i class=" fa-solid fa-user-plus"></i>&nbsp; Add New Employee</button></div>
        </div>
    </div>
    <div class="card-body">
        <table id="employeeTable" class="table display">
            <thead class="thead-dark">
                <tr>
                    <th><input type="checkbox" id="check" name="check" /></th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Address</th>
                    <th>Phone</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="employeeTableBody">
                @if (ViewBag.EmployeeDetailsReport != null)
                {
                    @foreach (var emp in ViewBag.EmployeeDetailsReport)
                    {
                        <tr>
                            <td><input type="checkbox" class="checkBox" onclick="disableClick(event)" value="@emp.EmployeeID" /></td>
                            <td>@emp.EmployeeName</td>
                            <td>@emp.EmployeeEmail</td>
                            <td>@emp.EmployeeAddress</td>
                            <td>@emp.EmployeePhone</td>
                            <td>
                                <i class="fa-solid fa-pen-to-square text-warning edit-btn" data-id="@emp.EmployeeID"></i> | <i class="fa-solid fa-trash text-danger delete-btn" data-toggle="modal" data-target="#DeleteOne" data-id="@emp.EmployeeID"></i>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Modal AddEdit-->
<div class="modal fade" id="AddEdit" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("Index", "EmployeeRecord", FormMethod.Post))
            {
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">
                        @(Model.EmployeeID != null ? "Edit Employee" : "Add Employee")
                    </h5>

                        <button type="button" class="close closeModal" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                            <label for="Name">Name<span style="color:red">*</span></label>
                        @Html.TextBoxFor(m => m.EmployeeName, new { @class = "form-control" })
                        @Html.HiddenFor(m => m.EmployeeID, new { @class = "form-control" })
                    </div>

                    <div class="form-group">
                        <label for="Name">Email</label>
                        @Html.TextBoxFor(m => m.EmployeeEmail, new { @class = "form-control", @Type = "email" })
                    </div>

                    <div class="form-group">
                        <label for="Name">Address</label>
                        @Html.TextAreaFor(m => m.EmployeeAddress, new { @class = "form-control" })
                    </div>

                    <div class="form-group">
                        <label for="Name">Phone</label>
                        @Html.TextBoxFor(m => m.EmployeePhone, new { @class = "form-control" })
                    </div>
                </div>
                <div class="modal-footer">
                        <button type="button" class="btn btn-secondary closeModal" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" value="Save" name="Command">Save</button>
                </div>
            }
        </div>
    </div>
</div>
<!-- Modal Delete ALL-->
<div class="modal fade" id="Delete" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("Index", "EmployeeRecord", FormMethod.Post))
            {
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Delete Employee</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @Html.HiddenFor(model => model.EmployeeIDs, new { @class = "form-control", @id = "hfEmployeeID" })
                    Are you sure you want to delete these Records ?
                    <p class="text-warning">This action cannot be undone.</p>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-danger" value="Delete_All" name="Command">Delete</button>
                </div>
            }
        </div>
    </div>
</div>
<!-- Modal Delete One-->
<div class="modal fade" id="DeleteOne" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("Index", "EmployeeRecord", FormMethod.Post))
            {
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Delete Employee</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @Html.HiddenFor(model => model.EmployeeIDs, new { @class = "form-control" })
                    Are you sure you want to delete this record ?

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-danger" value="Delete_Single" name="Command">Delete</button>
                </div>
            }
        </div>
    </div>
</div>

<script>
    $(function () {
        $('#employeeTable').DataTable({
            "paging": true,
            "searching": true,
            "ordering": false,
            "lengthMenu": [5, 10, 25, 50, 100],
            "pageLength": 5,
            "language": {
                "search": "Search Employee:",
                "lengthMenu": "Show _MENU_ entries per page"
            }
        });
    });
</script>

<script>
    function disableClick(event) {
        event.stopPropagation();
        const checkboxes = document.querySelectorAll('.checkBox:checked');
        const selectedValues = Array.from(checkboxes).map(cb => cb.value);
        const selectedIds = selectedValues.join(',');
        document.getElementById('hfEmployeeID').value = selectedIds;
    }
</script>

<script>
        $(function () {
        $(".edit-btn").click(function () {
            var id = $(this).data("id");
            console.log("Fetching data for ID: " + id);

            $.ajax({
                url: "/EmployeeRecord/GetData",
                type: "GET",
                data: { id: id },
                dataType: "json",
                success: function (response) {
                    if (response.success) {
                        var modal = $("#AddEdit");
                        debugger
                        modal.find("#EmployeeID").val(response.data.employeeID);
                        modal.find("#EmployeeName").val(response.data.employeeName);
                        modal.find("#EmployeeAddress").val(response.data.employeeAddress);
                        modal.find("#EmployeePhone").val(response.data.employeePhone);
                        modal.find("#EmployeeEmail").val(response.data.employeeEmail);

                        modal.modal("show");
                    } else {
                        alert("Error: " + response.message);
                    }
                },
                error: function () {
                    alert("An error occurred while fetching data.");
                }
            });
        });

        $("#AddEdit").on("hidden.bs.modal", function () {
            $(this).find("input, textarea").val("");
        });
    });

</script>

<script>
    $(document).ready(function () {
        $(".closeModal").click(function () {
            var modal = $("#AddEdit");
            modal.find("#EmployeeID").val("");
            modal.find("#EmployeeName").val("");
            modal.find("#EmployeeAddress").val("");
            modal.find("#EmployeePhone").val("");
            modal.find("#EmployeeEmail").val("");

            modal.modal("hide"); 
        });
    });
</script>


<script>
    $(function () {
        $(".delete-btn").click(function () {
            var id = $(this).data("id");
            var modal = $("#DeleteOne");
            modal.find("#EmployeeIDs").val(id);
        });
    });
</script>

<script>
    $(function () {
        function updateHiddenField() {
            let selectedIds = $(".checkBox:checked").map(function () {
                return $(this).val();
            }).get().join(',');

            $("#hfEmployeeID").val(selectedIds); 
        }
                
        $("#check").on("change", function () {
            $(".checkBox").prop("checked", this.checked);
            updateHiddenField();
        });
                
        $(".checkBox").on("change", function () {
            let allChecked = $(".checkBox").length === $(".checkBox:checked").length;
            $("#check").prop("checked", allChecked); 
            updateHiddenField();
        });
    });
</script>